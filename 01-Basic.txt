JS: In its most basic form, JS is synchronous, blocking, single threaded language.

- Synchronous: line by line execution.
- Blocking: no matter how much time previous process takes to execute, subsequent(next) process will
    execute after the completion of previous process.
- Single threaded: 
  - Thread is simply a process that JS program can use to run a task.
  - Each thread can only do one task at a time.
  - JS has only one thread called Main Thread for executing an code.

Note: This behaviour of JS creates problem for execution(slow). To overcome this 
    we use Async JS.


For async behaviour: 
- JS is not enough.
- For async behaviour we need new peices which are outside of JS (JS runtime environment).
- Web browsers define function and APIs that allow us to register functions that should not 
  be executed synchronously, and should instead be invoked asynchronously when some kind of 
  event occurs.
- Eg:  
    - passage of time(setTimeout(),  setInterval()).        
    - user's interaction with mouse (addEventListener).
    - the arrival of data over network (callback, promises, async-await).

- With asynchronous behaviour we can let our code do several things at the same time without
  stopping or blocking our main thread.


Note: JS asynchronous behaviour depends upon events(event-driven).

